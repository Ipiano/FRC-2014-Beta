// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.nordicstorm.robotics.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.nordicstorm.robotics.Robot;
/**
 *
 */
public class  AngleRotate extends Command {
    private double m_angle;
    private double m_speed;
    private double m_timeout;
    public AngleRotate(double angle, double speed, double timeout) {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        m_angle = angle;
        m_speed = speed;
        m_timeout = timeout;
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.driveTrain.setPidMode(Robot.driveTrain.ROTATE_TO_ANGLE_MODE);
        Robot.driveTrain.setPidDrivespeed(m_speed);
        Robot.driveTrain.setSetpointRelative(m_angle);
        Robot.driveTrain.enable();
        setTimeout(m_timeout);
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return isTimedOut() || Robot.driveTrain.onTarget();
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.disable();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
